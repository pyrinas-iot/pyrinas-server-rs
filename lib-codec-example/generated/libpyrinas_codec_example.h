#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * Struct that handles error codes
 */
typedef enum CodecResponse {
  Ok = 0,
  EncodeError = -1,
  DecodeError = -2,
} CodecResponse;

/**
 * Respnse of the encode function.
 * Includes the raw bytes that can then be
 * sent, shipped, packed, zipped, whatever your hearts content.
 */
typedef struct Encoded {
  uint8_t data[96];
  uintptr_t size;
  enum CodecResponse resp;
} Encoded;

/**
 * Data that is being encoded/decoded
 */
typedef struct EnvironmentData {
  /**
   * temperature is represented 1000x its actual value. No floats
   */
  uint16_t temperature;
  /**
   * humidity is only indicated at 1000x its value as well. No floats.
   */
  uint16_t humidity;
} EnvironmentData;

/**
 * Encode environment data generated by a temeprature/humidity sensor
 * being read by the nRF9160 Feather.
 *
 * Data is presented to the function as a struct with the corresponding
 * temperature and humidty entries.
 *
 * Returns an Encoded struct which includes an output buffer, the amount of
 * data written and the CodecResponse. An error is returned when encoding or
 * decoding cannot happen.
 */
struct Encoded encode_environment_data(const struct EnvironmentData *data);
